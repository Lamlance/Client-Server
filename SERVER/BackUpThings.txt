 string strIP = "";
        public Server()
        {
            InitializeComponent();
            string hostName = Dns.GetHostName(); // Retrive the Name of HOST
            IPAddress[] localIP = Dns.GetHostAddresses(hostName);
            //foreach (IPAddress address in localIP)
            //{
            //    MessageBox.Show($"{address}");
            //}
            strIP = localIP[1].ToString() + ":9000";
            txtBox_serverIP.Text = strIP;
            //MessageBox.Show(strIP);
        }

  

        SimpleTcpServer server;
        private void btn_start_Click(object sender, EventArgs e)
        {
            server.Start();
            txtBos_messageList.Text += $"Starting...{Environment.NewLine}";
            btn_start.Enabled = false;
            btn_send.Enabled = true;
        }

        private void Server_Load(object sender, EventArgs e)
        {
            btn_send.Enabled = false;
            server = new SimpleTcpServer(strIP);
            server.Events.ClientConnected += Events_ClientConnected;
            server.Events.ClientDisconnected += Events_ClientDisconnected;
            server.Events.DataReceived += Events_DataReceived;
        }

        private void Events_DataReceived(object sender, DataReceivedEventArgs e)
        {
            this.Invoke((MethodInvoker)delegate
            {
                txtBos_messageList.Text += $"{e.IpPort}: {Encoding.UTF8.GetString(e.Data)} {Environment.NewLine}";
            });
        }

        private void Events_ClientDisconnected(object sender, ClientDisconnectedEventArgs e)
        {
            this.Invoke((MethodInvoker)delegate
            {
                txtBos_messageList.Text += $"{e.IpPort} disconnected. {Environment.NewLine}";
                listBox_clientIP.Items.Remove(e.IpPort);
            });          
        }

        private void Events_ClientConnected(object sender, ClientConnectedEventArgs e)
        {
            this.Invoke((MethodInvoker)delegate
            {
                txtBos_messageList.Text += $"{e.IpPort} connected. {Environment.NewLine}";
                listBox_clientIP.Items.Add(e.IpPort);
            });
        }

        private void btn_send_Click(object sender, EventArgs e)
        {
            if(server.IsListening)
            {
                if( !string.IsNullOrEmpty(txtBox_message.Text) 
                    && listBox_clientIP.SelectedItem != null)
                {
                    server.Send(listBox_clientIP.SelectedItem.ToString(), txtBox_message.Text);
                    txtBos_messageList.Text += $"Server: { txtBox_message.Text} {Environment.NewLine}";
                    txtBox_message.Text = string.Empty;
                    //MessageBox.Show("SENDED: " + listBox_clientIP.SelectedItem.ToString() );
                }
            }
        }